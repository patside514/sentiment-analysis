{'role': 'assistant', 'content': 'Créons un script simple pour générer et afficher les visualisations :\n\n<function_calls>\n<create-file file_path="examples/show_charts.py">\n#!/usr/bin/env python3\n"""\nScript to demonstrate chart generation capabilities\n"""\n\nimport sys\nfrom pathlib import Path\n\n# Add src to path\nsrc_path = Path(__file__).parent.parent / \'src\'\nsys.path.insert(0, str(src_path))\n\nfrom visualization.charts_generator import ChartsGenerator\nimport matplotlib\nmatplotlib.use(\'Agg\')  # Use non-interactive backend\n\ndef main():\n    print("🎨 Generating Sample Visualizations")\n    print("=" * 50)\n    \n    # Create sample data\n    sentiment_summary = {\n        \'total\': 100,\n        \'positive\': 45,\n        \'negative\': 25,\n        \'neutral\': 30,\n        \'percentages\': {\'positive\': 45.0, \'negative\': 25.0, \'neutral\': 30.0},\n        \'average_polarity\': 0.15,\n        \'average_confidence\': 0.75\n    }\n    \n    keywords = [\n        {\'keyword\': \'service client\', \'score\': 0.95, \'frequency\': 25},\n        {\'keyword\': \'qualité\', \'score\': 0.88, \'frequency\': 20},\n        {\'keyword\': \'excellent\', \'score\': 0.82, \'frequency\': 18},\n        {\'keyword\': \'rapide\', \'score\': 0.75, \'frequency\': 15},\n        {\'keyword\': \'professionnel\', \'score\': 0.68, \'frequency\': 12}\n    ]\n    \n    # Generate charts\n    chart_gen = ChartsGenerator()\n    \n    print("Creating visualizations...")\n    \n    # Pie chart\n    fig1 = chart_gen.create_sentiment_pie_chart(sentiment_summary, \'Sentiment Distribution\')\n    print("✅ Sentiment pie chart created")\n    \n    # Bar chart  \n    fig2 = chart_gen.create_sentiment_bar_chart(sentiment_summary, \'Sentiment Analysis Results\')\n    print("✅ Sentiment bar chart created")\n    \n    # Keyword chart\n    fig3 = chart_gen.create_keyword_frequency_chart(keywords, \'Top Keywords by Frequency\')\n    print("✅ Keyword frequency chart created")\n    \n    # Dashboard\n    demo_results = {\n        \'sentiment_summary\': sentiment_summary,\n        \'keywords\': keywords,\n        \'temporal_data\': [],\n        \'sentiment_results\': []\n    }\n    fig4 = chart_gen.create_overall_summary_chart(demo_results, \'Analysis Dashboard\')\n    print("✅ Summary dashboard created")\n    \n    print("\\n🎉 All visualizations generated successfully!")\n    print("📊 In a real execution, these would be saved as PNG files")\n    print("📁 Charts would be saved in: outputs/[service]_[source]_[timestamp]/charts/")\n\nif __name__ == \'__main__\':\n    main()\n</create-file>\n</function_calls>'}