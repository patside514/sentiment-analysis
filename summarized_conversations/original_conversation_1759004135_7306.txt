{'role': 'assistant', 'content': 'Parfait ! Maintenant crÃ©ons un exemple de visualisation pour montrer les graphiques gÃ©nÃ©rÃ©s :\n\n<function_calls>\n<execute-command>\ncd /workspace && PYTHONPATH=/workspace python -c "\nimport sys\nsys.path.insert(0, \'src\')\nfrom visualization.charts_generator import ChartsGenerator\n\n# Create sample data\nsentiment_summary = {\n    \'total\': 100,\n    \'positive\': 45,\n    \'negative\': 25,\n    \'neutral\': 30,\n    \'percentages\': {\'positive\': 45.0, \'negative\': 25.0, \'neutral\': 30.0},\n    \'average_polarity\': 0.15,\n    \'average_confidence\': 0.75\n}\n\nkeywords = [\n    {\'keyword\': \'service client\', \'score\': 0.95, \'frequency\': 25},\n    {\'keyword\': \'qualitÃ©\', \'score\': 0.88, \'frequency\': 20},\n    {\'keyword\': \'excellent\', \'score\': 0.82, \'frequency\': 18},\n    {\'keyword\': \'rapide\', \'score\': 0.75, \'frequency\': 15},\n    {\'keyword\': \'professionnel\', \'score\': 0.68, \'frequency\': 12}\n]\n\n# Generate charts\nchart_gen = ChartsGenerator()\nprint(\'ðŸŽ¨ Generating sample visualizations...\')\n\n# Create and save charts\nimport matplotlib\nmatplotlib.use(\'Agg\')  # Use non-interactive backend\n\n# Pie chart\nfig1 = chart_gen.create_sentiment_pie_chart(sentiment_summary, \'Demo Sentiment Distribution\')\nprint(\'âœ… Sentiment pie chart created\')\n\n# Bar chart  \nfig2 = chart_gen.create_sentiment_bar_chart(sentiment_summary, \'Demo Sentiment Analysis\')\nprint(\'âœ… Sentiment bar chart created\')\n\n# Keyword chart\nfig3 = chart_gen.create_keyword_frequency_chart(keywords, \'Demo Keywords\')\nprint(\'âœ… Keyword frequency chart created\')\n\n# Dashboard\ndemo_results = {\n    \'sentiment_summary\': sentiment_summary,\n    \'keywords\': keywords,\n    \'temporal_data\': [],\n    \'sentiment_results\': []\n}\nfig4 = chart_gen.create_overall_summary_chart(demo_results, \'Demo Analysis Dashboard\')\nprint(\'âœ… Summary dashboard created\')\n\nprint(\'ðŸŽ‰ All visualizations generated successfully!\')\nprint(\'ðŸ“Š Charts would be saved as PNG files in a real execution\')\n"\n</execute-command>\n</function_calls>'}